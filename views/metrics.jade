!!! 5
html
  head
    meta(charset='UTF-8')
    title CritterCamp Metrics Dashboard
    meta(name='description', content='')
    meta(name='keywords', content='')
    // JS 
    script(src='http://ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min.js')
    script(src='js/highstock.js')
    script(src='js/exporting.js')
    script(src='js/bootstrap.js')

    // CSS 
    link(rel='stylesheet', href='css/reset.css')
    link(rel='stylesheet', href='css/metrics.css')
    link(rel='icon', type='image/png', href='img/tealpig.png')
    //if lt IE 9
      link(rel='stylesheet', type='text/css', href='css/ie.css')
    // Google Web Font
    link(href='http://fonts.googleapis.com/css?family=Anton&subset=latin-ext,latin', rel='stylesheet', type='text/css')
    // Twitter Bootstrap
    link(href='css/bootstrap.css', rel='stylesheet', media='screen')

  body
    #wrapper
      #header
        #head

      #middle
        ul#myPills.nav.nav-pills
          li.active
            a(href='#daily') Daily
          li
            a(href='#hourly') Hourly

        .pill-content
          #daily.pill-pane.active
            h2 daily
            .chart
              #goldspent
            .chart
              #totalplays
            .chart
              #uniqueusers
          #hourly.pill-pane
            h2 hourly
            .chart
              #numconnections
              

  script(type='text/javascript')
    $(function() {

      $('#myPills a:first').tab('show');

      $('#myPills a').click(function (e) {
        e.preventDefault();
        $(this).tab('show');
      });

      var goldSpentUrl = 'http://localhost:8080/chart/dailystat?metric=goldSpent';

      $.getJSON(goldSpentUrl, function(data) {
        // Create the chart
        $('#goldspent').highcharts('StockChart', {
          rangeSelector : {
            selected : 1
          },

          title : {
            text : 'Gold Spent'
          },
          
          series : [{
            name : 'Gold Spent',
            data : data,
            tooltip: {
              valueDecimals: 0
            }
          }]
        });
      });

      var games = ['twilight_tango', 'jetpack_jamboree', 'fishing_frenzy'],
          colors = Highcharts.getOptions().colors;

      var totalPlaysBaseUrl = 'http://localhost:8080/chart/gamestat?metric=totalPlays',
          totalPlaysSeriesOptions = [],
          totalPlaysSeriesCounter = 0;
      
      $.each(games, function(i, game) {
        var totalPlaysUrl = totalPlaysBaseUrl + '&game=' + game;
        $.getJSON(totalPlaysUrl, function(data) {

          totalPlaysSeriesOptions[i] = {
            name: game,
            data: data
          };

          // As we're loading the data asynchronously, we don't know what order it will arrive. So
          // we keep a counter and create the chart when all the data is loaded.
          totalPlaysSeriesCounter++;

          if (totalPlaysSeriesCounter == games.length) {
            createTotalPlaysChart();
          }
        });
      });

      // create the chart when all data is loaded
      function createTotalPlaysChart() {

        $('#totalplays').highcharts('StockChart', {

            rangeSelector: {
                selected: 4
            },

            title: {
              text: 'Total Plays'
            },
            
            tooltip: {
              valueDecimals: 2
            },
            
            series: totalPlaysSeriesOptions
        });
      }

      var uniqueUsersBaseUrl = 'http://localhost:8080/chart/gamestat?metric=uniqueUsers',
          uniqueUsersSeriesOptions = [],
          uniqueUsersSeriesCounter = 0;
      
      $.each(games, function(i, game) {
        var uniqueUsersUrl = uniqueUsersBaseUrl + '&game=' + game;
        $.getJSON(uniqueUsersUrl, function(data) {

          uniqueUsersSeriesOptions[i] = {
            name: game,
            data: data
          };

          // As we're loading the data asynchronously, we don't know what order it will arrive. So
          // we keep a counter and create the chart when all the data is loaded.
          uniqueUsersSeriesCounter++;

          if (uniqueUsersSeriesCounter == games.length) {
            createUniqueUsersChart();
          }
        });
      });

      // create the chart when all data is loaded
      function createUniqueUsersChart() {

        $('#uniqueusers').highcharts('StockChart', {

            rangeSelector: {
                selected: 4
            },

            title: {
              text: 'Unique Users'
            },
            
            tooltip: {
              valueDecimals: 2
            },
            
            series: uniqueUsersSeriesOptions
        });
      }

      var numConnectionsUrl = 'http://localhost:8080/chart/hourlystat?metric=numConnections';

      $.getJSON(numConnectionsUrl, function(data) {
        // Create the chart
        $('#numconnections').highcharts('StockChart', {
          rangeSelector : {
            selected : 1
          },

          title : {
            text : 'Number of Connections'
          },
          
          series : [{
            name : 'Number of Connections',
            data : data,
            tooltip: {
              valueDecimals: 0
            }
          }]
        });
      });
      
    });
